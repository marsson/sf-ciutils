name: Auto Tag and Publish

on:
  push:
    branches:
      - main # Triggers the workflow on pushes to main.

jobs:
  auto-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetches all history for all tags and branches

      # Extract version from package.json
      - name: Get version from package.json
        id: package_version
        run: echo "::set-output name=VERSION::$(cat package.json | jq -r .version)"

      # Check if tag already exists
      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "refs/tags/v${{ steps.package_version.outputs.VERSION }}" >/dev/null 2>&1; then
            echo "::set-output name=EXISTS::yes"
          else
            echo "::set-output name=EXISTS::no"
          fi

      # Create and push Git tag if it does not already exist
      - name: Create tag
        if: steps.check_tag.outputs.EXISTS == 'no'
        run: |
          git config --local user.email "marsson@gmail.com"
          git config --local user.name "GitHub Action"
          git tag -a "v${{ steps.package_version.outputs.VERSION }}" -m "Release v${{ steps.package_version.outputs.VERSION }}"
          git push https://${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/marsson/sf-ciutils.git "v${{ steps.package_version.outputs.VERSION }}"

  # Define any subsequent jobs here, such as building, testing, or publishing your package.
  # For example, a simplified npm publish job could look like this:
  # publish-npm:
  #  needs: auto-tag
  #  runs-on: ubuntu-latest
  #  if: needs.auto-tag.outputs.EXISTS == 'no' # Only run this job if a new tag was created.
  #  steps:
  #    - uses: actions/checkout@v3

  #   - name: Set up Node.js
  #    uses: actions/setup-node@v2
  #     with:
  #       node-version: '14' # Specify the Node.js version
  #       registry-url: 'https://registry.npmjs.org/'

  #  - name: Install Dependencies
  #    run: npm install

  #  - name: Build
  #    run: npm run build # Run your build script, adjust if necessary

  #   - name: Publish to npm
  #     run: npm publish
  #     env:
  #       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # Ensure you have an NPM_TOKEN secret set in your repository
